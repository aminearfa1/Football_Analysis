# Tracer l'évolution des scores au fil du temps
plot(df$Date, df$home_score, type = "l", col = "blue", xlab = "Date", ylab = "Score", main = "Évolution des scores au fil du temps")
# Importation du fichier CSV dans R
results <- read.csv(file_path, header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Tracer l'évolution des scores au fil du temps
plot(df$ate, df$home_score, type = "l", col = "blue", xlab = "Date", ylab = "Score", main = "Évolution des scores au fil du temps")
legend("topright", legend = c("Home Score", "Away Score"), col = c("blue", "red"), lty = 1)
legend("topright", legend = c("Home Score", "Away Score"), col = c("blue", "red"), lty = 1)
# Appeler plot.new() pour initialiser le nouveau graphique
plot.new()
# Utiliser la fonction transform pour créer une nouvelle colonne de date
df <- transform(df, Date = as.Date(ate))
# Appeler plot.new() pour initialiser le nouveau graphique
plot.new()
# Ajouter la légende après l'appel de plot.new()
legend("topright", legend = c("Home Score", "Away Score"), col = c("blue", "red"), lty = 1)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Utiliser la fonction transform pour créer une nouvelle colonne de date
df <- transform(df, Date = as.Date(ate))
# Utiliser la fonction transform pour créer une nouvelle colonne de date
df <- transform(df, Date = as.Date(ate))
# Ajouter la légende après l'appel de plot.new()
legend("topright", legend = c("Home Score", "Away Score"), col = c("blue", "red"), lty = 1)
# Utiliser la fonction transform pour créer une nouvelle colonne de date
df <- transform(df, Date = as.Date(ate))
# Utiliser la fonction transform pour créer une nouvelle colonne de date
df <- transform(df, Date = as.Date(ate))
# Utiliser la fonction transform pour créer une nouvelle colonne de date
df <- transform(df, Date = as.Date(ate))
# Utiliser la fonction transform pour créer une nouvelle colonne de date
df <- transform(df, Date = as.Date(ate))
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Tracer l'évolution des scores au fil du temps
plot(df$Date, df$home_score, type = "l", col = "blue", xlab = "Date", ylab = "Score", main = "Évolution des scores au fil du temps")
lines(df$Date, df$away_score, type = "l", col = "red")
# Appeler plot.new() pour initialiser le nouveau graphique
plot.new()
# Ajouter la légende après l'appel de plot.new()
legend("topright", legend = c("Home Score", "Away Score"), col = c("blue", "red"), lty = 1)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Tracer l'évolution des scores au fil du temps
plot(df$Date, df$home_score, type = "l", col = "blue", xlab = "Date", ylab = "Score", main = "Évolution des scores au fil du temps")
lines(df$Date, df$away_score, type = "l", col = "red")
# Appeler plot.new() pour initialiser le nouveau graphique
plot.new()
# Ajouter la légende après l'appel de plot.new()
legend("topright", legend = c("Home Score", "Away Score"), col = c("blue", "red"), lty = 1)
View(df)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Tracer l'évolution des scores au fil du temps
plot(df$Date, df$home_score, type = "l", col = "blue", xlab = "Date", ylab = "Score", main = "Évolution des scores au fil du temps")
lines(df$Date, df$away_score, type = "l", col = "red")
# Appeler plot.new() pour initialiser le nouveau graphique
plot.new()
# Ajouter la légende après l'appel de plot.new()
legend("topright", legend = c("Home Score", "Away Score"), col = c("blue", "red"), lty = 1)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Tracer l'évolution des scores au fil du temps
plot(df$Date, df$home_score, type = "l", col = "blue", xlab = "Date", ylab = "Score", main = "Évolution des scores au fil du temps")
View(df)
# Installer et charger le package ggplot2
library(ggplot2)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Créer un graphique avec ggplot2
ggplot(df, aes(x = Date)) +
geom_line(aes(y = home_score, color = "Home Score"), size = 1) +
geom_line(aes(y = away_score, color = "Away Score"), size = 1) +
labs(title = "Évolution des scores au fil du temps",
x = "Date",
y = "Score") +
theme_minimal() +
theme(legend.position = "top") +
scale_color_manual(values = c("Home Score" = "blue", "Away Score" = "red"))
# Installer et charger les packages nécessaires
library(ggplot2)
library(dplyr)
# Importer les données dans un dataframe (df)
df <- read.csv("votre_fichier.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Installer et charger les packages nécessaires
library(ggplot2)
library(dplyr)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Filtrer les données pour une période spécifique
start_date <- as.Date("YYYY-MM-DD")  # Remplacez YYYY-MM-DD par votre date de début souhaitée
end_date <- as.Date("YYYY-MM-DD")    # Remplacez YYYY-MM-DD par votre date de fin souhaitée
df_filtered <- df %>% filter(Date >= start_date, Date <= end_date)
# Créer un graphique avec ggplot2 pour les données filtrées
ggplot(df_filtered, aes(x = Date)) +
geom_line(aes(y = home_score, color = "Home Score"), size = 1) +
geom_line(aes(y = away_score, color = "Away Score"), size = 1) +
labs(title = "Évolution des scores au fil du temps",
x = "Date",
y = "Score") +
theme_minimal() +
theme(legend.position = "top") +
scale_color_manual(values = c("Home Score" = "blue", "Away Score" = "red"))
# Installer et charger les packages nécessaires
library(ggplot2)
library(dplyr)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Filtrer les données pour une période spécifique
start_date <- as.Date("YYYY-MM-DD")  # Remplacez YYYY-MM-DD par votre date de début souhaitée
end_date <- as.Date("YYYY-MM-DD")    # Remplacez YYYY-MM-DD par votre date de fin souhaitée
df_filtered <- df %>% filter(Date >= start_date, Date <= end_date)
# Créer un graphique avec ggplot2 pour les données filtrées
ggplot(df_filtered, aes(x = Date)) +
geom_line(aes(y = home_score, color = "Home Score"), size = 1) +
geom_line(aes(y = away_score, color = "Away Score"), size = 1) +
labs(title = "Évolution des scores au fil du temps",
x = "Date",
y = "Score") +
theme_minimal() +
theme(legend.position = "top") +
scale_color_manual(values = c("Home Score" = "blue", "Away Score" = "red"))
# Installer et charger le package ggplot2
library(ggplot2)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Créer un graphique avec ggplot2
ggplot(df, aes(x = Date)) +
geom_line(aes(y = home_score, color = "Home Score"), size = 1) +
geom_line(aes(y = away_score, color = "Away Score"), size = 1) +
labs(title = "Évolution des scores au fil du temps",
x = "Date",
y = "Score") +
theme_minimal() +
theme(legend.position = "top") +
scale_color_manual(values = c("Home Score" = "blue", "Away Score" = "red"))
# Créer un graphique avec ggplot2
ggplot(df, aes(x = Date)) +
geom_line(aes(y = home_score, color = "Home Score"), size = 1) +
geom_line(aes(y = away_score, color = "Away Score"), size = 1) +
labs(title = "Évolution des scores au fil du temps",
x = "Date",
y = "Score") +
theme_minimal() +
theme(legend.position = "top") +
scale_color_manual(values = c("Home Score" = "blue", "Away Score" = "red"))
# Installer et charger le package ggplot2
library(ggplot2)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Créer un graphique avec ggplot2
ggplot(df, aes(x = Date)) +
geom_line(aes(y = home_score, color = "Home Score"), size = 1) +
geom_line(aes(y = away_score, color = "Away Score"), size = 1) +
labs(title = "Évolution des scores au fil du temps",
x = "Date",
y = "Score") +
theme_minimal() +
theme(legend.position = "top") +
scale_color_manual(values = c("Home Score" = "blue", "Away Score" = "red"))
# Installer et charger le package ggplot2
library(ggplot2)
# Importer les données dans un dataframe (df)
df <- read.csv("results.csv")
# Convertir la première colonne en date
df$Date <- as.Date(df[, 1])
# Créer un graphique avec ggplot2
ggplot(df, aes(x = Date)) +
geom_line(aes(y = home_score, color = "Home Score"), size = 1) +
geom_line(aes(y = away_score, color = "Away Score"), size = 1) +
labs(title = "Évolution des scores au fil du temps",
x = "Date",
y = "Score") +
theme_minimal() +
theme(legend.position = "top") +
scale_color_manual(values = c("Home Score" = "blue", "Away Score" = "red"))
